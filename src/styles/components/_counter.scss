@use '../abstracts/' as *;

.counter {
  $border-sm: 1rem;
  $border-md: rem(22);

  transition: transform 100ms ease-in-out;
  &:hover {
    transform: translateY(-2px) scale(1.005);
  }

  &__body {
    position: relative;

    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;

    max-height: 300px;
    max-width: 300px;

    width: 100%;

    aspect-ratio: 1;

    border: solid $border-sm transparent;
    border-radius: 100%;
    background-clip: padding-box;
    background-color: var(--clr-secondary-800);
    box-shadow: -50px -50px 100px #272c5a, 50px 50px 100px #121530;

    @include breakpoint(medium) {
      max-height: 410px;
      max-width: 410px;
      min-height: 340px;
      min-width: 340px;

      width: 51.25dvh;
      border-width: $border-md;
    }

    @include breakpoint(large) {
      gap: 5%;
    }

    &:before {
      content: '';

      position: absolute;
      inset: -$border-sm;

      z-index: -1;

      border-radius: 100%;
      background: linear-gradient(315deg, #2e325a 0%, #0e112a 100%);

      @include breakpoint(medium) {
        inset: -$border-md;
      }
    }

    &--active:before {
      animation: rotate-element 7000ms linear infinite forwards;
    }
  }

  &__circle {
    position: absolute;
    padding: rem(10);

    @include breakpoint(medium) {
      padding: rem(14);
    }

    & path {
      stroke: var(--clr-primary);
      stroke-linecap: round;

      @include breakpoint(medium) {
        stroke-width: rem(12);
      }
    }
  }

  &__time {
    min-width: 2.375em;
    text-align: left;
  }

  &__action {
    margin-right: -10px;
  }
}

@keyframes rotate-element {
  from {
    transform: rotate(0);
  }

  to {
    transform: rotate(360deg);
  }
}
